<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="treeImageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="treeImageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADq
        DQAAAk1TRnQBSQFMAgEBAwEAAVABAAFQAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEBIAAxoBJAMjATMDIwEzAyMBMwMjATMDIwEzAyMBMwMjATMDIwEzAyMBMwMj
        ATMDIwEzAyMBMwMjATMDIwEzAxoBJFAAAxQBGwNDAXkDSgHFAzMB5gMzAeYDSgHFA0MBeAMTARpQAAJc
        AVkBwQG2AX4BDgH/AbQBewEJAf8BtAF6AQcB/wG0AXoBBwH/AbQBegEHAf8BtAF6AQcB/wG0AXoBBwH/
        AbQBegEHAf8BtAF6AQcB/wG0AXoBBwH/AbQBegEHAf8BtAF6AQcB/wG0AXsBCQH/AbYBfgEOAf8CXAFZ
        AcEDIQEwAyMBMwMjATMDIwEzAyMBMwMjATMDIwEzAyMBMwMjATMDIwEzAyMBMwMjATMDIwEzAyEBLxAA
        BAEDRAF8AxQB+AMmAfgDcgH/A5YB/wOVAf8DcQH/AyUB+AMUAfgDQwF6BAFIAAG2AX4BDjn/AbYBfgEO
        Af8BWgF4AYwB8gFDAZgB0gH/AUABlAHQAf8BPgGSAc8B/wE+AZIBzgH/AT8BkgHOAf8BPwGSAc4B/wE/
        AZIBzgH/AT8BkgHOAf8BPwGSAc4B/wE/AZIBzgH/AT8BkgHOAf8BPwGTAc8B/wFUAW8BgQHwAwsBDggA
        BAEDTAGpAxAB+wObAf8D/BH/A/wB/wOZAf8DDQH8A00BpwQBRAABtAF7AQk5/wG0AXsBCQH/AUQBmQHS
        Af8BPwGUAdAB/wGrAfsC/wGbAfMC/wGSAfEC/wGTAfEC/wGTAfEC/wGTAfEC/wGTAfEC/wGTAfEC/wGT
        AfEC/wGTAfEC/wGmAfgC/wFlAbgB4wH/AzkBXwgAA0UBfQMQAfsDyxX/A/oB/wPQAf8D4AH/A8kB/wMN
        AfwDQwF6RAABtAF6AQcJ/wG5AWQBDQH/AdIB1AHWAf8BnQGbAZkB/wGZAZUBlAH/AZIBkAGOAf8BiwGJ
        AYcB/wGOAYwBiQH/AZQBkgGQAf8BmgGXAZUB/wGcAZoBmAn/AbQBegEHAf8BQwGYAdIB/wFPAaYB2QH/
        AY4B2gH1Af8BogHuAv8BggHlAf4B/wGEAeUB/gH/AYQB5QH+Af8BhQHmAf4B/wGFAeYB/gH/AYUB5gH+
        Af8BhQHmAf4B/wGEAeYB/gH/AZYB6wL/AYwB2AH1Af8DWAG4BAADFQEcAxIB+QOcGf8DrQH/A9kB/wO7
        Af8D1gH/A5kB/wMUAfgDEwEaQAABtAF6AQcF/wH8K/8B/QH+Bv8BtAF6AQcB/wFCAZYB0QH/AWsBvgHo
        Af8BbQG9AeYB/wG7AfIC/wF1Ad4B/QH/AXcB3gH8Af8BeAHeAfwB/wF7Ad8B/AH/AX0B3wH8Af8BfQHf
        AfwB/wF9Ad8B/AH/AXwB3wH8Af8BgAHgAf0B/wGtAfAC/wFNAZ0B0wH/AwsBDgNEAXsDJwH4A/wZ/wOs
        Bf8D8gH/A7kB/wP8Af8DJQH4A0MBeUAAAbQBegEHBf8B+AH6Av8BvAFnAREB/wLMAdAB/wGYAZcBlQH/
        AZQBkAGPAf8BjgGLAYoB/wGIAYYBhAH/AYoBhwGGAf8BkQGNAYsB/wGWAZMBkAH/AZkBlQGTAf8C+QH7
        Bf8BtAF6AQcB/wFAAZUB0AH/AYoB1wH1Af8BRAGhAdgB/wHdAf0C/wHaAfoC/wHbAfoC/wHeAfoC/wF0
        AdwB/AH/AXYB2wH6Af8BdQHaAfoB/wF0AdoB+gH/AXQB2gH6Af8BcgHZAfoB/wGhAegC/wF8Ab8B5gH/
        AzkBXgNJAccDcR3/A78B/wO2Af8DpwH/A+cF/wNvAf8DSgHFQAABtAF6AQgF/wHyAfUB+AH/AfUB+gL/
        AfgB+wH9Af8B/AH9AfwB/wL+Af0R/wH9Af4B/QH/AfkB+gH5Af8B8wH0AfUF/wG0AXoBCAH/AT4BlAHQ
        Af8BqwHwAv8BRAGdAdYB/wE2AYwBywH/ATYBjAHLAf8BNgGMAcsB/wE3AYsBywH/AVwBvgHqAf8BbwHZ
        AfsB/wFqAdYB+gH/AWgB1QH5Af8BZwHUAfkB/wFmAdQB+QH/AYIB3gH8Af8BqgHgAfYB/wFXAlkBuQMz
        AeYDlyH/A/MB/wP6Cf8DlQH/AzQB5UAAAbQBewEIBf8B7wHxAfUB/wG+AWkBEwH/AsYByAH/AZQBkQGQ
        Af8BkAGMAYoB/wGKAYYBhAH/AYQBggF/Af8BhQGDAYEB/wGMAYkBhwH/AZEBjgGMAf8BkwGQAY0B/wLw
        AfEF/wG0AXsBCAH/AT0BkgHPAf8BuQH0Av8BcwHbAfsB/wFrAcwB8gH/AWwBzQHzAf8BbAHOAfMB/wFt
        Ac4B8wH/AUcBnAHUAf8BVgG6AekB/wHaAfgC/wHXAfYC/wHWAfYC/wHVAfYC/wHVAfcC/wHbAfwC/wE+
        AZQB0AH/AzEB5wOYMf8DlgH/AzMB5kAAAbQBewEIBf8B6AHsAe8B/wHsAfEB9gH/AfAB8wH1Af8B8wL0
        Af8C9gH1Af8B9gH3AfYB/wH3AfgB9wH/AfcB+AH3Af8B9gH3AfYB/wP1Af8C8QHwAf8B6gHrAewF/wG0
        AXsBCAH/ATwBkgHPAf8BwAHzAv8BcQHaAfsB/wF0AdsB+wH/AXUB2wH8Af8BdQHbAfwB/wF2AdwB/AH/
        AXMB2gH6Af8BRAGcAdQB/wE3AYwBywH/ATYBjAHLAf8BNQGMAcwB/wE0AY0BzAH/ATgBkAHOAf8BPQGU
        AdAB/wFeAXEBewHrA0sByAF2AXQBbgH/AcsBuAF/Af8BwgGsAWoB/wHDAa0BawH/AeMB2AG5If8DcAH/
        A0kBxkAAAbQBewEIBf8B5AHmAesB/wG/AWoBEwH/AbwBvQG/Af8BjQGKAYkB/wGIAYYBhAH/AYMBgAF+
        Af8BfQF6AXkB/wF/AX0BewH/AYQBggGBAf8BiQGHAYUB/wGMAYoBhwH/AeYB5QHnBf8BtAF7AQgB/wE7
        AZIBzwH/AcoB9gL/AWkB1QH5Af8BbAHVAfkB/wFrAdUB+QH/AWkB1QH5Af8BaQHVAfoB/wFqAdcB+wH/
        AWgB1AH6Af8BXgHHAfEB/wFeAccB8gH/AV0ByAHyAf8BtAHjAfgB/wE9AZQB0AH/Az4BaQQAA0UBfgGS
        AYABOwH+AfAB6gHaBf8B/gH9AfwB/wHPAb4BiQH/Ad4B0gGtGf8D/AH/AyYB+ANDAXpAAAG0AXsBCAX/
        AdwB3gHhAf8B3gHhAeQB/wHgAeIB4wH/AuIB4wH/AuMB5AH/A+QB/wPkAf8D5AH/A+QB/wPjAf8D4QH/
        At0B4AX/AbQBewEIAf8BOwGSAc8B/wHVAfcC/wFgAdEB+QH/AWEB0AH4Af8BtAHrAf0B/wHZAfYC/wHa
        AfgC/wHaAfgC/wHbAfkC/wHcAfoC/wHcAfoC/wHcAfsC/wHgA/8BPgGVAdAB/wMjATMEAAJAAT8BbQHb
        Ac8BrQ7/Av4B/wHAAakBZBn/A5sB/wMUAfgDFAEbQAABtQF8AQo5/wG1AXwBCgH/AT0BlAHQAf8B3AH8
        Av8B2AH3Av8B2AH3Av8B2wH6Av8BNQGOAc0B/wE5AZEBzgH/AToBkgHPAf8BOgGSAc8B/wE6AZIBzwH/
        AToBkgHPAf8BOwGSAc8B/wE9AZQB0AH/AV4BYgFjAdcIAAFNAUwBSgGLAe8B6QHXEf8BwwGuAWwB/wL+
        Af0R/wPLAf8DEAH7A0QBfEQAAbYBfwEQAf8B9QHdAbYB/wHbAZ0BNwH/AdsBnQE4Af8B2wGdATkB/wHb
        AZ0BOQH/AdsBnQE5Af8B2wGdATkB/wHbAZ0BOQH/AdsBnQE5Af8B2wGdATkB/wHbAZ0BOQH/AdsBnQE4
        Af8B2wGdATcB/wH1Ad0BtgH/AbYBfwEQAf8DVgGwAT0BlAHQAf8BOgGSAc8B/wE6AZIBzwH/AT0BlAHQ
        Af8CXgFgAdIoAAMvAUkBuQGtAYwB8wz/AfwB+wH5Af8BwQGqAWYN/wP8Af8DmwH/AxAB+wNMAakEAUQA
        AbgBggEWAf8B7wHQAZ4B/wHsAc0BmQH/AewBzQGZAf8B7AHNAZoB/wHsAc0BmgH/AewBzQGaAf8B7AHN
        AZoB/wHsAc0BmgH/AewBzQGaAf8B7AHNAZoB/wHsAc0BmgH/AewBzQGZAf8B7AHNAZkB/wHvAdABngH/
        AbgBggEWAf9EAAFlAWIBVAG6AcMBuAGdAfUB/AH7AfgB/wH0Ae8B4wH/AagBkgFXAf4BgAF4AWEB/wOW
        Af8DlgH/A3IB/wMmAfgDEgH5A0UBfQQBSAACVwFWAbIBuAGCARcB/wG3AYEBFQH/AbYBgQEUAf8BtgGB
        ARUB/wG2AYEBFQH/AbYBgQEVAf8BtgGBARUB/wG2AYEBFQH/AbYBgQEVAf8BtgGBARUB/wG2AYEBFQH/
        AbYBgQEUAf8BtwGBARUB/wG4AYIBFwH/AlcBVgGyRAAEAgJAAT8BbAFlAWIBVAG6AV0BWgFSAasCSwFK
        AZADSAHIAzMB5gMzAeYDSQHHA0MBegMVARxQAAFCAU0BPgcAAT4DAAEoAwABQAMAARADAAEBAQABAQUA
        AYAXAAP/AwAC/wHwAQ8FAAEDAcABAwUAAQEBgAEBBQABAQGAAQEFAAEBLwABAQcAAQEHAAEDAQABAQQA
        AQMB/wEAAQEEAAL/AYABAwQAAv8BgAEPAgAL
</value>
  </data>
</root>